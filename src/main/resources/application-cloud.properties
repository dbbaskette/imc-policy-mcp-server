# Cloud Foundry configuration
server.port=${PORT:8080}

# Database will be configured from VCAP_SERVICES by CF environment processor

# JPA configuration for cloud
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Do not initialize schema in cloud (pre-populated database)
spring.sql.init.mode=never

# Vector store configuration (Spring AI 1.1 format)
spring.ai.vectorstore.pgvector.initialize-schema=false
spring.ai.vectorstore.pgvector.index-type=HNSW
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
spring.ai.vectorstore.pgvector.dimensions=768
spring.ai.vectorstore.pgvector.max-document-batch-size=10000

# AI service configuration for multi-modal service
# Using java-cfenv-boot-tanzu-genai automatically configures Spring AI from service bindings
# GenAI service requires /openai path suffix for OpenAI-compatible API
spring.ai.openai.api-key=${genai.locator.api-key:dummy-key}
spring.ai.openai.base-url=${genai.locator.api-base:https://api.openai.com}/openai

# Configure correct model names for GenAI service
# Available models: openai/gpt-oss-120b (chat), nomic-embed-text-v1025 (embedding)
spring.ai.openai.embedding.options.model=nomic-embed-text-v1025
spring.ai.openai.chat.options.model=openai/gpt-oss-120b

# Debug logging to diagnose embedding API issues
logging.level.com.insurancemegacorp.policymcpserver=INFO
logging.level.org.springframework.ai=DEBUG
logging.level.org.springframework.ai.openai=DEBUG
logging.level.org.springframework.web.client=DEBUG

# Reduce noise from MCP keep-alive warnings in production logs
logging.level.io.modelcontextprotocol.util.KeepAliveScheduler=ERROR

# RAG configuration
app.rag.top-k=${RAG_TOP_K:5}
app.rag.similarity-threshold=${RAG_SIMILARITY_THRESHOLD:0.2}
app.rag.query-rewrite=${RAG_QUERY_REWRITE:false}
app.rag.multi-query=${RAG_MULTI_QUERY:false}
app.rag.multi-query-count=${RAG_MULTI_QUERY_COUNT:3}

# Vector store table configuration
app.vectorstore.table-name=${VECTORSTORE_TABLE_NAME:vector_store}
app.vectorstore.vector-column=${VECTORSTORE_VECTOR_COLUMN:embedding}
app.vectorstore.content-column=${VECTORSTORE_CONTENT_COLUMN:content}
app.vectorstore.metadata-column=${VECTORSTORE_METADATA_COLUMN:metadata}
app.vectorstore.id-column=${VECTORSTORE_ID_COLUMN:id}

# Disable sample data loading in cloud (database is pre-populated)
app.data.load-sample-data=false

# Streamable MCP Server Configuration for Cloud Foundry
spring.ai.mcp.server.protocol=STREAMABLE
spring.ai.mcp.server.name=imc-policy-mcp-server
spring.ai.mcp.server.version=2.0.0
spring.ai.mcp.server.type=SYNC
spring.ai.mcp.server.instructions=This streamable MCP server provides real-time insurance policy document retrieval with notifications
spring.ai.mcp.server.resource-change-notification=true
spring.ai.mcp.server.tool-change-notification=true
spring.ai.mcp.server.prompt-change-notification=true
spring.ai.mcp.server.streamable-http.mcp-endpoint=/api/mcp
# Increased keep-alive interval for production to reduce log noise
spring.ai.mcp.server.streamable-http.keep-alive-interval=60s
spring.ai.mcp.server.streamable-http.session-timeout=120s